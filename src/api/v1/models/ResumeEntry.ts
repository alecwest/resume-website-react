/* tslint:disable */
/* eslint-disable */
/**
 * resume-data
 * API for managing my resume data
 *
 * The version of the OpenAPI document: 2023-01-16T13:44:13Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntryDetails } from './EntryDetails';
import {
    EntryDetailsFromJSON,
    EntryDetailsFromJSONTyped,
    EntryDetailsToJSON,
} from './EntryDetails';

/**
 * 
 * @export
 * @interface ResumeEntry
 */
export interface ResumeEntry {
    /**
     * The username the entry is tied to
     * @type {string}
     * @memberof ResumeEntry
     */
    user: string;
    /**
     * 
     * @type {EntryDetails}
     * @memberof ResumeEntry
     */
    details: EntryDetails;
    /**
     * 
     * @type {string}
     * @memberof ResumeEntry
     */
    id: string;
    /**
     * Approximate date the event first began
     * @type {string}
     * @memberof ResumeEntry
     */
    startDate: string;
    /**
     * Approximate date the event ended, or 'present'
     * @type {string}
     * @memberof ResumeEntry
     */
    endDate: string;
    /**
     * 
     * @type {string}
     * @memberof ResumeEntry
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ResumeEntry
     */
    type: ResumeEntryTypeEnum;
}


/**
 * @export
 */
export const ResumeEntryTypeEnum = {
    Education: 'education',
    Employment: 'employment',
    Skillhard: 'skillhard',
    Project: 'project',
    Bio: 'bio'
} as const;
export type ResumeEntryTypeEnum = typeof ResumeEntryTypeEnum[keyof typeof ResumeEntryTypeEnum];


/**
 * Check if a given object implements the ResumeEntry interface.
 */
export function instanceOfResumeEntry(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "details" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "startDate" in value;
    isInstance = isInstance && "endDate" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function ResumeEntryFromJSON(json: any): ResumeEntry {
    return ResumeEntryFromJSONTyped(json, false);
}

export function ResumeEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResumeEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': json['user'],
        'details': EntryDetailsFromJSON(json['details']),
        'id': json['id'],
        'startDate': json['startDate'],
        'endDate': json['endDate'],
        'title': json['title'],
        'type': json['type'],
    };
}

export function ResumeEntryToJSON(value?: ResumeEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': value.user,
        'details': EntryDetailsToJSON(value.details),
        'id': value.id,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'title': value.title,
        'type': value.type,
    };
}

