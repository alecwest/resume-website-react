/* tslint:disable */
/* eslint-disable */
/**
 * resume-data
 * API for managing my resume data
 *
 * The version of the OpenAPI document: 2023-01-16T13:44:13Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Social } from './Social';
import {
    SocialFromJSON,
    SocialFromJSONTyped,
    SocialToJSON,
} from './Social';

/**
 * Details about the entry. Varies by entry type
 * @export
 * @interface EntryDetails
 */
export interface EntryDetails {
    /**
     * For education type: the degree received
     * @type {string}
     * @memberof EntryDetails
     */
    degree?: string;
    /**
     * Supplemental information about the entry. Each item represents a line break / paragraph.
     * @type {Array<string>}
     * @memberof EntryDetails
     */
    description?: Array<string>;
    /**
     * For education type: the notable-classes taken
     * @type {Array<string>}
     * @memberof EntryDetails
     */
    notableClasses?: Array<string>;
    /**
     * For employment type: the position in the job
     * @type {string}
     * @memberof EntryDetails
     */
    position?: string;
    /**
     * For skillhard type: a ranking from 1-5 of experience with the skill
     * @type {number}
     * @memberof EntryDetails
     */
    proficiency?: number;
    /**
     * For project type: a url to a project
     * @type {string}
     * @memberof EntryDetails
     */
    projectSource?: string;
    /**
     * For bio type: a list of social media objects
     * @type {Array<Social>}
     * @memberof EntryDetails
     */
    social?: Array<Social>;
    /**
     * 
     * @type {string}
     * @memberof EntryDetails
     */
    subtitle?: string;
    /**
     * A list of image urls associated with the entry
     * @type {Array<string>}
     * @memberof EntryDetails
     */
    images?: Array<string>;
}

/**
 * Check if a given object implements the EntryDetails interface.
 */
export function instanceOfEntryDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EntryDetailsFromJSON(json: any): EntryDetails {
    return EntryDetailsFromJSONTyped(json, false);
}

export function EntryDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntryDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'degree': !exists(json, 'degree') ? undefined : json['degree'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'notableClasses': !exists(json, 'notableClasses') ? undefined : json['notableClasses'],
        'position': !exists(json, 'position') ? undefined : json['position'],
        'proficiency': !exists(json, 'proficiency') ? undefined : json['proficiency'],
        'projectSource': !exists(json, 'projectSource') ? undefined : json['projectSource'],
        'social': !exists(json, 'social') ? undefined : ((json['social'] as Array<any>).map(SocialFromJSON)),
        'subtitle': !exists(json, 'subtitle') ? undefined : json['subtitle'],
        'images': !exists(json, 'images') ? undefined : json['images'],
    };
}

export function EntryDetailsToJSON(value?: EntryDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'degree': value.degree,
        'description': value.description,
        'notableClasses': value.notableClasses,
        'position': value.position,
        'proficiency': value.proficiency,
        'projectSource': value.projectSource,
        'social': value.social === undefined ? undefined : ((value.social as Array<any>).map(SocialToJSON)),
        'subtitle': value.subtitle,
        'images': value.images,
    };
}

